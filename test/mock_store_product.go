// Code generated by MockGen. DO NOT EDIT.
// Source: store-product/repository (interfaces: IStoreProductRepository)

// Package test is a generated GoMock package.
package test

import (
	reflect "reflect"
	models "store-product/models"
	gomock "github.com/golang/mock/gomock"
)

// MockIStoreProductRepository is a mock of IStoreProductRepository interface.
type MockIStoreProductRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIStoreProductRepositoryMockRecorder
}

// MockIStoreProductRepositoryMockRecorder is the mock recorder for MockIStoreProductRepository.
type MockIStoreProductRepositoryMockRecorder struct {
	mock *MockIStoreProductRepository
}

// NewMockIStoreProductRepository creates a new mock instance.
func NewMockIStoreProductRepository(ctrl *gomock.Controller) *MockIStoreProductRepository {
	mock := &MockIStoreProductRepository{ctrl: ctrl}
	mock.recorder = &MockIStoreProductRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIStoreProductRepository) EXPECT() *MockIStoreProductRepositoryMockRecorder {
	return m.recorder
}

// CreateStoreProduct mocks base method.
func (m *MockIStoreProductRepository) CreateStoreProduct(arg0 *models.Product) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateStoreProduct", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateStoreProduct indicates an expected call of CreateStoreProduct.
func (mr *MockIStoreProductRepositoryMockRecorder) CreateStoreProduct(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateStoreProduct", reflect.TypeOf((*MockIStoreProductRepository)(nil).CreateStoreProduct), arg0)
}

// GetProductForStore mocks base method.
func (m *MockIStoreProductRepository) GetProductForStore(arg0 int) ([]models.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProductForStore", arg0)
	ret0, _ := ret[0].([]models.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProductForStore indicates an expected call of GetProductForStore.
func (mr *MockIStoreProductRepositoryMockRecorder) GetProductForStore(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProductForStore", reflect.TypeOf((*MockIStoreProductRepository)(nil).GetProductForStore), arg0)
}
